version: 2

models:
  - name: int_status_changes
    description: "Intermediate model that tracks connector status changes with previous status tracking and confirmation status. Uses incremental processing with 30-minute buffer to ensure accurate previous_status relationships. Grain: one row per status notification."
    columns:
      - name: charge_point_id
        description: "Identifier for the charge point"
        tests:
          - not_null
      - name: unique_id
        description: "Unique identifier for the OCPP message"
        tests:
          - not_null
      - name: connector_id
        description: "Identifier for the connector"
        tests:
          - not_null
      - name: ingested_ts
        description: "Timestamp when the status notification was ingested"
        tests:
          - not_null
      - name: status
        description: "Current status from the notification"
        tests:
          - not_null
          - accepted_values:
              arguments:
                values: ['Available', 'Preparing', 'Charging', 'SuspendedEVSE', 'SuspendedEV', 'Finishing', 'Reserved', 'Unavailable', 'Faulted']
      - name: error_code
        description: "Error code from the status notification payload (NoError if no error to report)"
        tests:
          - not_null        
      - name: payload
        description: "Original payload from the status notification"
      - name: previous_status
        description: "Previous status for the same charge point and connector (null for first status)"
      - name: previous_ingested_ts
        description: "Timestamp of the previous status notification for the same charge point and connector (null for first status)"
      - name: next_status
        description: "Next status for the same charge point and connector (null for last status)"
      - name: next_ingested_ts
        description: "Timestamp of the next status notification for the same charge point and connector (null for last status)"
      - name: seconds_to_previous_status
        description: "Time in seconds from previous status to current status (null if no previous status)"
      - name: seconds_to_next_status
        description: "Time in seconds from current status to next status (null if no next status)"
      - name: confirmation_ingested_ts
        description: "Timestamp when the confirmation was ingested"
    tests:
      - dbt_utils.unique_combination_of_columns:
          arguments:
            combination_of_columns:
              - charge_point_id
              - connector_id
              - ingested_ts
      - dbt_utils.expression_is_true:
          arguments:
            expression: "status != previous_status or previous_status is null"
          config:
            severity: error
      - dbt_utils.expression_is_true:
          arguments:
            expression: "status != next_status or next_status is null"
          config:
            severity: error

  - name: int_connector_preparing
    description: "Intermediate model that processes charge attempt events, anchoring on charger going into 'Preparing' state and aggregating related authentication data. Each row represents a unique status change to 'Preparing'."
    columns:
      - name: charge_point_id
        description: "Identifier for the charge point"
        tests:
          - not_null
      - name: connector_id
        description: "Identifier for the charging connector"
        tests:
          - not_null
      - name: unique_id
        description: "Unique identifier for the status change that triggered this charge attempt"
        tests:
          - not_null
      - name: ingested_ts
        description: "Timestamp when the StatusNotification with status 'Preparing' was ingested (start of charge attempt)"
        tests:
          - not_null
      - name: previous_status
        description: "Status before changing to 'Preparing'"
      - name: status
        description: "Current status (should be 'Preparing')"
        tests:
          - not_null
          - accepted_values:
              arguments:
                values: ['Preparing']
      - name: next_status
        description: "Next status after 'Preparing' (e.g., 'Charging', 'Available', 'Faulted')"
      - name: confirmation_ingested_ts
        description: "Timestamp when the status change confirmation was received"
      - name: id_tags
        description: "Array of RFID tags or user identifiers from Authorize/StartTransaction messages"
      - name: id_tag_statuses
        description: "Array of authorization statuses (e.g., 'Accepted', 'Blocked')"
      - name: transaction_id
        description: "Primary transaction ID for this charge attempt (first element from transaction_ids array)"
      - name: error_codes
        description: "Array of error codes from StatusNotification messages"
      - name: _unique_transaction_count
        description: "Count of unique transaction IDs for this charge attempt (should be 0 or 1)"
        tests:
          - accepted_values:
              arguments:
                values: [0, 1]
    tests:
      - dbt_utils.unique_combination_of_columns:
          arguments:
            combination_of_columns:
              - charge_point_id
              - connector_id
              - ingested_ts

  - name: int_transactions
    description: "Intermediate model that processes transaction-related OCPP events (StartTransaction, StopTransaction, RemoteStartTransaction, RemoteStopTransaction, MeterValues) and groups them by transaction ID. Each row represents a unique transaction with aggregated details."
    columns:
      - name: transaction_id
        description: "Unique identifier for the transaction from OCPP StartTransaction/StopTransaction messages"
        tests:
          - not_null
      - name: charge_point_id
        description: "Identifier for the charge point"
        tests:
          - not_null
      - name: connector_id
        description: "Connector ID for this transaction"
        tests:
          - not_null
      - name: ingested_ts
        description: "Earliest timestamp when any OCPP event for this transaction was ingested"
        tests:
          - not_null
      - name: transaction_start_ts
        description: "Timestamp when the transaction started (from StartTransaction message)"
        tests:
          - not_null
      - name: transaction_stop_ts
        description: "Timestamp when the transaction stopped (from StopTransaction message)"
      - name: transaction_stop_reason
        description: "Reason for stopping the transaction (e.g., 'EVDisconnected', 'DeAuthorized', 'Local')"
      - name: id_tags
        description: "Array of RFID tags or user identifiers from Authorize/StartTransaction messages"
      - name: id_tag_statuses
        description: "Array of authorization statuses (e.g., 'Accepted', 'Blocked', 'Expired')"
      - name: meter_start_wh
        description: "Meter reading at transaction start (Wh)"
      - name: meter_stop_wh
        description: "Meter reading at transaction stop (Wh)"
      - name: energy_transferred_kwh
        description: "Total energy transferred in kWh (calculated from meter_stop_kw - meter_start_kw)"
      - name: error_codes
        description: "Array of error codes from StatusNotification events that occurred during the transaction"
      - name: _unique_connectors_count
        tests:
          - accepted_values:
              arguments:
                values: [1]
    tests:
      - dbt_utils.unique_combination_of_columns:
          arguments:
            combination_of_columns:
              - charge_point_id
              - connector_id
              - ingested_ts
